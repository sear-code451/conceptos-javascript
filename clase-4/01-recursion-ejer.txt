
        EJERCICIOS DE RECURSIVIDAD FIBONACCI:

let nFibonacci = num => {
  if( num === 0 ) return 0;
  if( num === 1 ) return 1;
  return nFibonacci(num - 1) + nFibonacci(num - 2);
}


let fibonacci2 = num => {
  if( num < 2 ) return num;
  return fibonacci2(num-1) + fibonacci2(num - 2);
}


let fibonacci = n => {
  return n < 2 ? n : fibonacci(n-1) + fibonacci(n - 2);
}




Bueno para entender cuando se llama a la misma funcion es donde hace recursividad y en este la recursividad estÃ¡ siendo llamada 2 veces (
    fibonacci( n - 1 )  and fibonacci( n - 2);
)
Es decir que en ambos se deben de hacer la pregunta segÃºn la funcion en el que estes. Si no entendiste mirar el video del enlace.

el primero es como que si no me da ni 0 y ni 1 entonces fallarÃ­a la recursividad. Es decir es incompleto.

El segundo con el tercero es completo lo que cambia es como estan siendo declaradas, ahorrando una linea de codigo con el tercero intentar aprender hacer con el tercero.


Para entender esto mirar el video del enlace:
https://youtu.be/k6I_TOW6O2o
